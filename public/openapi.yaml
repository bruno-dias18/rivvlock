openapi: 3.0.3
info:
  title: RivvLock API
  description: |
    API REST compl√®te pour la plateforme d'escrow RivvLock.
    
    ## üîê Authentification
    La plupart des endpoints n√©cessitent un JWT token Supabase dans le header `Authorization: Bearer <token>`.
    
    ## üåç Base URL
    - Production: `https://slthyxqruhfuyfmextwr.supabase.co/functions/v1`
    - Les Edge Functions sont d√©ploy√©es sur Supabase Edge Runtime (Deno)
    
    ## üìä Cat√©gories
    - **Transactions**: Cr√©ation, gestion, et lifecycle des transactions
    - **Payments**: Int√©gration Stripe pour paiements escrow
    - **Disputes**: Syst√®me de r√©solution de litiges
    - **Quotes**: Syst√®me de devis
    - **Admin**: Op√©rations administratives
    - **User**: Gestion des comptes utilisateurs
    
    ## üîí S√©curit√©
    - Rate limiting: 10 req/min par utilisateur sur endpoints publics
    - RLS (Row Level Security) activ√© sur toutes les tables
    - Validation Zod sur tous les inputs
    - CORS configur√© pour cross-origin requests
  version: 2.0.0
  contact:
    name: RivvLock Support
    url: https://rivvlock.com/contact
  license:
    name: Proprietary
    url: https://rivvlock.com/terms

servers:
  - url: https://slthyxqruhfuyfmextwr.supabase.co/functions/v1
    description: Production Server (Lovable Cloud)

tags:
  - name: Transactions
    description: Gestion du cycle de vie des transactions
  - name: Payments
    description: Traitement des paiements Stripe
  - name: Disputes
    description: Syst√®me de r√©solution de litiges
  - name: Quotes
    description: Syst√®me de devis
  - name: Admin
    description: Op√©rations administratives
  - name: User
    description: Gestion des comptes utilisateurs
  - name: Stripe
    description: Int√©gration Stripe Connect
  - name: Maintenance
    description: T√¢ches de maintenance automatis√©es

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token Supabase obtenu via authentification
    
    TokenAuth:
      type: apiKey
      in: query
      name: token
      description: Token s√©curis√© pour acc√®s public (payment links)

  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Message d'erreur d√©taill√©
          example: "Transaction not found"
        code:
          type: string
          description: Code d'erreur (optionnel)
          example: "TRANSACTION_NOT_FOUND"

    Transaction:
      type: object
      required:
        - id
        - title
        - description
        - amount
        - status
        - seller_id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: Identifiant unique de la transaction
        title:
          type: string
          maxLength: 200
          description: Titre de la transaction
          example: "D√©veloppement site web"
        description:
          type: string
          description: Description d√©taill√©e
          example: "Site vitrine avec 5 pages"
        amount:
          type: number
          minimum: 10
          maximum: 1000000
          description: Montant en EUR
          example: 1500.00
        currency:
          type: string
          enum: [EUR, CHF, USD]
          default: EUR
          description: Devise de la transaction
        status:
          type: string
          enum: 
            - pending
            - awaiting_payment
            - payment_authorized
            - validation_period
            - completed
            - disputed
            - expired
          description: √âtat actuel de la transaction
        payment_method:
          type: string
          enum: [card, bank_transfer]
          description: M√©thode de paiement choisie
        seller_id:
          type: string
          format: uuid
          description: ID du vendeur
        buyer_id:
          type: string
          format: uuid
          nullable: true
          description: ID de l'acheteur (null si pas encore rejoint)
        stripe_payment_intent_id:
          type: string
          nullable: true
          description: ID du PaymentIntent Stripe
        validation_deadline:
          type: string
          format: date-time
          nullable: true
          description: Date limite de validation
        payment_link_token:
          type: string
          nullable: true
          description: Token s√©curis√© pour le lien de paiement
        invoice_number:
          type: string
          nullable: true
          description: Num√©ro de facture g√©n√©r√©
          example: "INV-2025-001234"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateTransactionRequest:
      type: object
      required:
        - title
        - description
        - amount
        - currency
        - payment_method
        - buyer_name
        - buyer_email
      properties:
        title:
          type: string
          maxLength: 200
        description:
          type: string
        amount:
          type: number
          minimum: 10
          maximum: 1000000
        currency:
          type: string
          enum: [EUR, CHF, USD]
        payment_method:
          type: string
          enum: [card, bank_transfer]
        buyer_name:
          type: string
        buyer_email:
          type: string
          format: email
        buyer_phone:
          type: string
          nullable: true
        validation_days:
          type: integer
          minimum: 1
          maximum: 30
          default: 14

    Dispute:
      type: object
      required:
        - id
        - transaction_id
        - status
        - created_at
      properties:
        id:
          type: string
          format: uuid
        transaction_id:
          type: string
          format: uuid
        conversation_id:
          type: string
          format: uuid
          description: ID de la conversation unifi√©e
        status:
          type: string
          enum: [open, resolved, escalated]
        reason:
          type: string
          description: Raison du litige
        resolution:
          type: string
          nullable: true
          description: R√©solution finale
        escalated_at:
          type: string
          format: date-time
          nullable: true
        resolved_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time

    Quote:
      type: object
      required:
        - id
        - title
        - amount
        - currency
        - seller_id
        - status
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        amount:
          type: number
        currency:
          type: string
          enum: [EUR, CHF, USD]
        seller_id:
          type: string
          format: uuid
        buyer_email:
          type: string
          format: email
          nullable: true
        status:
          type: string
          enum: [draft, sent, viewed, accepted, rejected, expired]
        secure_token:
          type: string
          description: Token pour acc√®s public
        valid_until:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    StripeAccount:
      type: object
      properties:
        id:
          type: string
          description: Stripe Connect Account ID
          example: "acct_1234567890"
        charges_enabled:
          type: boolean
        payouts_enabled:
          type: boolean
        details_submitted:
          type: boolean
        requirements:
          type: object
          description: Informations manquantes pour activation

paths:
  # ==========================================
  # TRANSACTIONS
  # ==========================================
  /create-transaction:
    post:
      tags: [Transactions]
      summary: Cr√©er une nouvelle transaction
      description: |
        Cr√©e une transaction escrow avec g√©n√©ration automatique du lien de paiement.
        Le vendeur doit avoir un compte Stripe Connect actif.
      operationId: createTransaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
            examples:
              card_payment:
                summary: Paiement par carte
                value:
                  title: "D√©veloppement site web"
                  description: "Site vitrine avec 5 pages"
                  amount: 1500
                  currency: "EUR"
                  payment_method: "card"
                  buyer_name: "Jean Dupont"
                  buyer_email: "jean@example.com"
                  buyer_phone: "+33612345678"
                  validation_days: 14
              bank_transfer:
                summary: Virement bancaire
                value:
                  title: "Consulting Marketing"
                  description: "Audit SEO complet"
                  amount: 2500
                  currency: "EUR"
                  payment_method: "bank_transfer"
                  buyer_name: "Marie Martin"
                  buyer_email: "marie@example.com"
                  validation_days: 7
      responses:
        '200':
          description: Transaction cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  transaction:
                    $ref: '#/components/schemas/Transaction'
                  payment_link:
                    type: string
                    description: URL du lien de paiement
                    example: "https://rivvlock.com/payment/abc123xyz"
        '400':
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifi√©
        '429':
          description: Rate limit d√©pass√©

  /get-transaction-by-token:
    post:
      tags: [Transactions]
      summary: R√©cup√©rer une transaction par token
      description: |
        Endpoint public pour acc√©der √† une transaction via son token s√©curis√©.
        Utilis√© pour les liens de paiement.
      operationId: getTransactionByToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: Token s√©curis√© de la transaction
      responses:
        '200':
          description: Transaction trouv√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/Transaction'
                  seller:
                    type: object
                    properties:
                      full_name:
                        type: string
                      company_name:
                        type: string
                  buyer:
                    type: object
                    nullable: true
        '404':
          description: Transaction non trouv√©e

  /join-transaction:
    post:
      tags: [Transactions]
      summary: Rejoindre une transaction (acheteur)
      description: |
        Permet √† un acheteur de rejoindre une transaction via le lien de paiement.
        Cr√©e un compte si n√©cessaire.
      operationId: joinTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - email
                - password
              properties:
                token:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                full_name:
                  type: string
      responses:
        '200':
          description: Acheteur rejoint avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  transaction:
                    $ref: '#/components/schemas/Transaction'
                  user:
                    type: object
        '400':
          description: Token invalide ou transaction d√©j√† rejointe

  /renew-expired-transaction:
    post:
      tags: [Transactions]
      summary: Renouveler une transaction expir√©e
      description: G√©n√®re un nouveau lien de paiement pour une transaction expir√©e
      operationId: renewExpiredTransaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Transaction renouvel√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  payment_link:
                    type: string

  /request-date-change:
    post:
      tags: [Transactions]
      summary: Demander un changement de date de validation
      description: Le vendeur demande √† modifier la date limite de validation
      operationId: requestDateChange
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
                - new_validation_deadline
              properties:
                transaction_id:
                  type: string
                  format: uuid
                new_validation_deadline:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Demande envoy√©e

  /respond-to-date-change:
    post:
      tags: [Transactions]
      summary: R√©pondre √† une demande de changement de date
      description: L'acheteur accepte ou refuse le changement de date
      operationId: respondToDateChange
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
                - approved
              properties:
                transaction_id:
                  type: string
                  format: uuid
                approved:
                  type: boolean
      responses:
        '200':
          description: R√©ponse enregistr√©e

  # ==========================================
  # PAYMENTS
  # ==========================================
  /create-payment-intent:
    post:
      tags: [Payments]
      summary: Cr√©er un PaymentIntent Stripe
      description: |
        Initialise un paiement escrow sur Stripe Connect.
        Le paiement est cr√©√© `on_behalf_of` le compte du vendeur.
      operationId: createPaymentIntent
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: PaymentIntent cr√©√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_secret:
                    type: string
                    description: Secret pour Stripe.js
                  payment_intent_id:
                    type: string

  /create-payment-checkout:
    post:
      tags: [Payments]
      summary: Cr√©er une session Stripe Checkout
      description: Cr√©e une session de paiement h√©berg√©e par Stripe
      operationId: createPaymentCheckout
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
                success_url:
                  type: string
                cancel_url:
                  type: string
      responses:
        '200':
          description: Session cr√©√©e
          content:
            application/json:
              schema:
                type: object
                properties:
                  session_url:
                    type: string
                    description: URL de redirection vers Stripe

  /mark-payment-authorized:
    post:
      tags: [Payments]
      summary: Capturer un paiement autoris√©
      description: |
        Capture les fonds d'un PaymentIntent apr√®s autorisation.
        Lance la p√©riode de validation.
      operationId: markPaymentAuthorized
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Paiement captur√©

  /process-automatic-transfer:
    post:
      tags: [Payments]
      summary: Transf√©rer les fonds au vendeur
      description: |
        Transf√®re automatiquement les fonds au vendeur apr√®s validation.
        D√©duit les frais de la plateforme.
      operationId: processAutomaticTransfer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Transfert effectu√©

  # ==========================================
  # DISPUTES
  # ==========================================
  /create-dispute:
    post:
      tags: [Disputes]
      summary: Cr√©er un litige
      description: |
        Ouvre un litige sur une transaction en p√©riode de validation.
        Cr√©e automatiquement une conversation unifi√©e.
      operationId: createDispute
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
                - reason
              properties:
                transaction_id:
                  type: string
                  format: uuid
                reason:
                  type: string
                  maxLength: 500
                  description: Raison du litige
      responses:
        '200':
          description: Litige cr√©√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  dispute:
                    $ref: '#/components/schemas/Dispute'
        '400':
          description: Transaction non √©ligible au litige

  /respond-to-dispute:
    post:
      tags: [Disputes]
      summary: Envoyer un message dans un litige
      description: |
        Envoie un message dans la conversation du litige.
        Limite de 100 messages par litige.
      operationId: respondToDispute
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dispute_id
                - message
              properties:
                dispute_id:
                  type: string
                  format: uuid
                message:
                  type: string
                  maxLength: 1000
      responses:
        '200':
          description: Message envoy√©
        '400':
          description: Limite de messages atteinte

  /create-proposal:
    post:
      tags: [Disputes]
      summary: Cr√©er une proposition de r√©solution
      description: Propose un refund partiel ou total pour r√©soudre le litige
      operationId: createProposal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dispute_id
                - proposed_refund_amount
                - description
              properties:
                dispute_id:
                  type: string
                  format: uuid
                proposed_refund_amount:
                  type: number
                  minimum: 0
                description:
                  type: string
      responses:
        '200':
          description: Proposition cr√©√©e

  /accept-proposal:
    post:
      tags: [Disputes]
      summary: Accepter une proposition
      description: |
        Accepte la proposition de r√©solution.
        Si les 2 parties acceptent, ex√©cute le refund automatiquement.
      operationId: acceptProposal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - proposal_id
              properties:
                proposal_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Proposition accept√©e

  /reject-proposal:
    post:
      tags: [Disputes]
      summary: Rejeter une proposition
      operationId: rejectProposal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - proposal_id
              properties:
                proposal_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Proposition rejet√©e

  /force-escalate-dispute:
    post:
      tags: [Disputes, Admin]
      summary: Escalader manuellement un litige
      description: Admin force l'escalation d'un litige
      operationId: forceEscalateDispute
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dispute_id
              properties:
                dispute_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Litige escalad√©

  /create-admin-proposal:
    post:
      tags: [Disputes, Admin]
      summary: Cr√©er une proposition officielle admin
      description: L'admin cr√©e une r√©solution officielle que les parties doivent valider
      operationId: createAdminProposal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - dispute_id
                - proposed_refund_amount
                - admin_decision
              properties:
                dispute_id:
                  type: string
                  format: uuid
                proposed_refund_amount:
                  type: number
                admin_decision:
                  type: string
      responses:
        '200':
          description: Proposition officielle cr√©√©e

  # ==========================================
  # QUOTES
  # ==========================================
  /create-quote:
    post:
      tags: [Quotes]
      summary: Cr√©er un devis
      description: Cr√©e un devis avec g√©n√©ration d'un lien s√©curis√©
      operationId: createQuote
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - amount
                - currency
              properties:
                title:
                  type: string
                description:
                  type: string
                amount:
                  type: number
                currency:
                  type: string
                  enum: [EUR, CHF, USD]
                buyer_email:
                  type: string
                  format: email
                valid_days:
                  type: integer
                  default: 30
      responses:
        '200':
          description: Devis cr√©√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  quote:
                    $ref: '#/components/schemas/Quote'
                  quote_url:
                    type: string

  /get-quote-by-token:
    post:
      tags: [Quotes]
      summary: R√©cup√©rer un devis par token
      operationId: getQuoteByToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Devis trouv√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  quote:
                    $ref: '#/components/schemas/Quote'

  /accept-quote:
    post:
      tags: [Quotes]
      summary: Accepter un devis
      description: |
        Accepte le devis et le convertit automatiquement en transaction.
        G√©n√®re le lien de paiement.
      operationId: acceptQuote
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quote_id
              properties:
                quote_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Devis accept√© et converti
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    $ref: '#/components/schemas/Transaction'
                  payment_link:
                    type: string

  # ==========================================
  # STRIPE CONNECT
  # ==========================================
  /create-stripe-account:
    post:
      tags: [Stripe]
      summary: Cr√©er un compte Stripe Connect
      description: |
        Initialise le onboarding Stripe Connect pour un vendeur.
        Retourne l'URL d'onboarding.
      operationId: createStripeAccount
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - country
                - email
              properties:
                country:
                  type: string
                  enum: [FR, CH, DE, BE, LU]
                email:
                  type: string
                  format: email
                return_url:
                  type: string
                refresh_url:
                  type: string
      responses:
        '200':
          description: Compte cr√©√©
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: string
                  onboarding_url:
                    type: string

  /check-stripe-account-status:
    post:
      tags: [Stripe]
      summary: V√©rifier le statut d'un compte Stripe
      operationId: checkStripeAccountStatus
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Statut du compte
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeAccount'

  /validate-stripe-accounts:
    post:
      tags: [Stripe, Admin]
      summary: Valider tous les comptes Stripe
      description: Batch validation des comptes Stripe Connect (admin)
      operationId: validateStripeAccounts
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Validation termin√©e

  # ==========================================
  # USER MANAGEMENT
  # ==========================================
  /delete-user-account:
    post:
      tags: [User]
      summary: Supprimer un compte utilisateur
      description: |
        Suppression GDPR-compliant avec anonymisation des donn√©es.
        V√©rifie qu'aucune transaction active n'existe.
      operationId: deleteUserAccount
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Compte supprim√©
        '400':
          description: Transactions actives en cours

  /export-user-data:
    post:
      tags: [User]
      summary: Exporter les donn√©es personnelles
      description: GDPR data export - retourne un ZIP avec toutes les donn√©es
      operationId: exportUserData
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Export g√©n√©r√©
          content:
            application/zip:
              schema:
                type: string
                format: binary

  # ==========================================
  # ADMIN
  # ==========================================
  /admin-get-transaction:
    post:
      tags: [Admin]
      summary: R√©cup√©rer n'importe quelle transaction (admin)
      operationId: adminGetTransaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Transaction trouv√©e

  /admin-delete-transaction:
    post:
      tags: [Admin]
      summary: Supprimer une transaction (admin)
      operationId: adminDeleteTransaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Transaction supprim√©e

  /release-funds:
    post:
      tags: [Admin]
      summary: Lib√©rer manuellement les fonds
      description: Admin force le transfert des fonds au vendeur
      operationId: releaseFunds
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Fonds lib√©r√©s

  /fix-blocked-transaction:
    post:
      tags: [Admin, Maintenance]
      summary: D√©bloquer une transaction bloqu√©e
      operationId: fixBlockedTransaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Transaction d√©bloqu√©e

  # ==========================================
  # MAINTENANCE & CRON
  # ==========================================
  /process-validation-deadline:
    post:
      tags: [Maintenance]
      summary: Traiter les deadlines de validation (CRON)
      description: |
        T√¢che automatis√©e qui:
        - Auto-compl√®te les transactions apr√®s validation
        - D√©clenche les transferts automatiques
        
        Ex√©cution: Toutes les 5 minutes
      operationId: processValidationDeadline
      responses:
        '200':
          description: Traitement effectu√©

  /process-expired-payment-deadlines:
    post:
      tags: [Maintenance]
      summary: Traiter les paiements expir√©s (CRON)
      description: |
        Auto-expire les transactions non pay√©es apr√®s 72h.
        
        Ex√©cution: Toutes les 5 minutes
      operationId: processExpiredPaymentDeadlines
      responses:
        '200':
          description: Traitement effectu√©

  /process-dispute-deadlines:
    post:
      tags: [Maintenance]
      summary: Escalader les litiges (CRON)
      description: |
        Auto-escalade les litiges non r√©solus apr√®s 7 jours.
        
        Ex√©cution: Quotidienne
      operationId: processDisputeDeadlines
      responses:
        '200':
          description: Traitement effectu√©

  /send-validation-reminders:
    post:
      tags: [Maintenance]
      summary: Envoyer les rappels de validation (CRON)
      description: |
        Envoie des emails de rappel aux acheteurs.
        
        Ex√©cution: Quotidienne
      operationId: sendValidationReminders
      responses:
        '200':
          description: Rappels envoy√©s

  /gdpr-data-retention-cleanup:
    post:
      tags: [Maintenance]
      summary: Nettoyage GDPR (CRON)
      description: |
        Supprime les donn√©es obsol√®tes conform√©ment au GDPR:
        - Transactions compl√©t√©es > 7 ans
        - Activity logs > 2 ans
        
        Ex√©cution: Hebdomadaire
      operationId: gdprDataRetentionCleanup
      responses:
        '200':
          description: Nettoyage effectu√©

  /clean-old-users:
    post:
      tags: [Maintenance]
      summary: Nettoyer les comptes non v√©rifi√©s (CRON)
      description: |
        Supprime les comptes non v√©rifi√©s > 30 jours.
        
        Ex√©cution: Quotidienne
      operationId: cleanOldUsers
      responses:
        '200':
          description: Nettoyage effectu√©

  # ==========================================
  # WEBHOOKS
  # ==========================================
  /stripe-webhook:
    post:
      tags: [Stripe]
      summary: Webhook Stripe
      description: |
        Endpoint pour recevoir les √©v√©nements Stripe:
        - payment_intent.succeeded
        - payment_intent.payment_failed
        - account.updated
        - transfer.created
        
        Signature v√©rifi√©e avec `stripe-signature` header.
      operationId: stripeWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Event Stripe
      responses:
        '200':
          description: Webhook trait√©
        '400':
          description: Signature invalide

security:
  - BearerAuth: []
